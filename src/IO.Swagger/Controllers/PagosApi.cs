/*
 * TPVV
 *
 * TPVV Ingeniería Web
 *
 * OpenAPI spec version: 1.0.0
 * Contact: lac56@alu.ua.es
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class PagosApiController : ControllerBase
    { 
        /// <summary>
        /// Obtiene todos los detalles de una transacción en específico
        /// </summary>
        /// <remarks>Lo que haremos será consultar un pago en concreto. Podremos ver todos los campos que hemos introducido para la transacción así como el estado en el que se encuentra la misma</remarks>
        /// <param name="token"></param>
        /// <param name="idPago"></param>
        /// <response code="200">Detalles sobre la transaccion</response>
        /// <response code="401">Sin autorización para realizar esta operación</response>
        /// <response code="404">No se encontró el recurso que se pidió</response>
        [HttpGet]
        [Route("/lac56-alu/TPVV/1.0.0/tpvv/detallesPago")]
        [ValidateModelState]
        [SwaggerOperation("GetDetallesPago")]
        [SwaggerResponse(statusCode: 200, type: typeof(Pagos), description: "Detalles sobre la transaccion")]
        [SwaggerResponse(statusCode: 401, type: typeof(InlineResponse401), description: "Sin autorización para realizar esta operación")]
        [SwaggerResponse(statusCode: 404, type: typeof(InlineResponse404), description: "No se encontró el recurso que se pidió")]
        public virtual IActionResult GetDetallesPago([FromQuery][Required()]string token, [FromQuery][Required()]int? idPago)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Pagos));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(InlineResponse401));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(InlineResponse404));
            string exampleJson = null;
            exampleJson = "{\n  \"detallesEstado\" : \"TARJETA DENEGADA\",\n  \"fecha\" : \"09-12-2022 09:55:23\",\n  \"total\" : 120.9,\n  \"estado\" : \"DENEGADO\",\n  \"concepto\" : \"Compra memoria RAM\",\n  \"id\" : 1,\n  \"devolucionId\" : 22,\n  \"tarjeta\" : {\n    \"caducidad\" : \"09/2023\",\n    \"numero\" : \"984516545251\",\n    \"ccv\" : 123,\n    \"titularTarjeta\" : \"Luis Alfonso\"\n  },\n  \"referencia\" : \"515adfas54\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Pagos>(exampleJson)
                        : default(Pagos);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Se devuelven todos los pagos realizados por ese usuario
        /// </summary>
        /// <remarks>Lo que hacemos es mediante el token verificar que usuario es el que esta haciendo la peticion y entonces listar todos los pagos que ha realizado a través de nuestra aplicación.</remarks>
        /// <param name="token"></param>
        /// <response code="200">Lista de los pagos del usuario</response>
        /// <response code="401">Sin autorización para realizar esta operación</response>
        [HttpGet]
        [Route("/lac56-alu/TPVV/1.0.0/tpvv/listaPagos")]
        [ValidateModelState]
        [SwaggerOperation("ListaPagos")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "Lista de los pagos del usuario")]
        [SwaggerResponse(statusCode: 401, type: typeof(InlineResponse401), description: "Sin autorización para realizar esta operación")]
        public virtual IActionResult ListaPagos([FromQuery][Required()]string token)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse200));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(InlineResponse401));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : [ {\n    \"detallesEstado\" : \"TARJETA DENEGADA\",\n    \"fecha\" : \"09-12-2022 09:55:23\",\n    \"total\" : 120.9,\n    \"estado\" : \"DENEGADO\",\n    \"concepto\" : \"Compra memoria RAM\",\n    \"id\" : 1,\n    \"devolucionId\" : 22,\n    \"tarjeta\" : {\n      \"caducidad\" : \"09/2023\",\n      \"numero\" : \"984516545251\",\n      \"ccv\" : 123,\n      \"titularTarjeta\" : \"Luis Alfonso\"\n    },\n    \"referencia\" : \"515adfas54\"\n  }, {\n    \"detallesEstado\" : \"TARJETA DENEGADA\",\n    \"fecha\" : \"09-12-2022 09:55:23\",\n    \"total\" : 120.9,\n    \"estado\" : \"DENEGADO\",\n    \"concepto\" : \"Compra memoria RAM\",\n    \"id\" : 1,\n    \"devolucionId\" : 22,\n    \"tarjeta\" : {\n      \"caducidad\" : \"09/2023\",\n      \"numero\" : \"984516545251\",\n      \"ccv\" : 123,\n      \"titularTarjeta\" : \"Luis Alfonso\"\n    },\n    \"referencia\" : \"515adfas54\"\n  } ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
                        : default(InlineResponse200);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Se hace una nueva transaccion
        /// </summary>
        /// <remarks>Lo que hacemos es realizar una nueva trasacción vinculada al cliente</remarks>
        /// <param name="body"></param>
        /// <param name="token"></param>
        /// <response code="201">Detalles sobre la transaccion</response>
        /// <response code="400">Esta respuesta significa que el servidor no pudo interpretar la solicitud dada una sintaxis inválida.</response>
        /// <response code="401">Sin autorización para realizar esta operación</response>
        [HttpPost]
        [Route("/lac56-alu/TPVV/1.0.0/tpvv/realizarPago")]
        [ValidateModelState]
        [SwaggerOperation("RealizarPago")]
        [SwaggerResponse(statusCode: 201, type: typeof(Pagos), description: "Detalles sobre la transaccion")]
        [SwaggerResponse(statusCode: 400, type: typeof(InlineResponse400), description: "Esta respuesta significa que el servidor no pudo interpretar la solicitud dada una sintaxis inválida.")]
        [SwaggerResponse(statusCode: 401, type: typeof(InlineResponse401), description: "Sin autorización para realizar esta operación")]
        public virtual IActionResult RealizarPago([FromBody]Pagos body, [FromQuery][Required()]string token)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(Pagos));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(InlineResponse400));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(InlineResponse401));
            string exampleJson = null;
            exampleJson = "{\n  \"detallesEstado\" : \"TARJETA DENEGADA\",\n  \"fecha\" : \"09-12-2022 09:55:23\",\n  \"total\" : 120.9,\n  \"estado\" : \"DENEGADO\",\n  \"concepto\" : \"Compra memoria RAM\",\n  \"id\" : 1,\n  \"devolucionId\" : 22,\n  \"tarjeta\" : {\n    \"caducidad\" : \"09/2023\",\n    \"numero\" : \"984516545251\",\n    \"ccv\" : 123,\n    \"titularTarjeta\" : \"Luis Alfonso\"\n  },\n  \"referencia\" : \"515adfas54\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Pagos>(exampleJson)
                        : default(Pagos);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
